name: Tests

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Filter paths
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: filter
        with:
          filters: |
            go:
              - '**/*.go'

      - name: Setup Go
        if: steps.filter.outputs.go == 'true'
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache-dependency-path: "**/*.sum"

      - name: Get dependencies
        if: steps.filter.outputs.go == 'true'
        run: go mod download

      - name: Build
        if: steps.filter.outputs.go == 'true'
        run: go vet . && go build -v .

  test:
    name: Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Filter paths
        uses: dorny/paths-filter@ebc4d7e9ebcb0b1eb21480bb8f43113e996ac77a # v3.0.1
        id: filter
        with:
          filters: |
            go:
              - '**/*.go'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache-dependency-path: "**/*.sum"

      - name: Get dependencies
        if: steps.filter.outputs.go == 'true'
        run: go mod download

      - name: Unit tests
        if: steps.filter.outputs.go == 'true'
        timeout-minutes: 10
        run: go test -v -cover ./...

      - name: Check for uncommitted changes in generated docs
        run: make docs && git diff --exit-code

  testacc:
    name: Dispatch Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Invoke acceptance tests workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: testacc.yml
          ref: ${{ github.event.pull_request.head.ref }}
          inputs: '{"ref": "${{ github.head_ref }}" }'